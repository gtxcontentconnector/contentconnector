#=================================================================================================
# Sample indexer configuration file for the LDAP-Request processor.
# The configured request processor would fetch contacts
# from a LDAP-server and store them in the lucene index.
#=================================================================================================
#-------------------------------------------------------------------------------------------------
# General Section
#-------------------------------------------------------------------------------------------------
# file system location of index
index.LDAP.indexLocations.1.path=${com.gentics.portalnode.confpath}/index/index_LDAP
# The following configuration line would place the whole index in the system memory instead of 
# writing it to the file system
#index.LDAP.indexLocations.1.path=RAM
# The following configuration line states how often new index jobs are created 
# (index every 4 hours 60 * 60 * 4)
index.LDAP.interval=14400
# The following configuration line states how often the scheduler checks if new index jobs are 
# present. This value should be equal or lower to the value above.
index.LDAP.checkinterval=5
# Hide jobs which didn't index anything (they only performed an update check)
#index.LDAP.hideemptyjobs=false
#show the last 5 jobs
index.LDAP.lastjobs_size=5
# The following line states if periodical indexing is enabled. If periodical 
# indexing is disabled, the indexer has the be started via the indexer servlet
index.LDAP.periodical=true
# How many items should be processed at once. Decrease this number if you have 
# memory problems.
index.LDAP.batchsize=50
# The location of the analyzer configuration. 
# (You can define one analyzer per field)
index.LDAP.analyzerconfig=${com.gentics.portalnode.confpath}/rest/analyzer.properties
index.LDAP.STOPWORDFILE=${com.gentics.portalnode.confpath}/rest/stopwords.list
# True if the indexer should update/write the reopenfile after it finished the
# index run. this is important for distributed architectures.
#
index.LDAP.writereopenfile=true
#-------------------------------------------------------------------------------------------------
# ContentRepository specific config for files
#-------------------------------------------------------------------------------------------------
# The RequestProcessor that should be used to fetch the objects 
index.LDAP.CR.CONTACTS.rp.1.rpClass=com.gentics.cr.LDAPRequestProcessor
# Datasource
index.LDAP.CR.CONTACTS.rp.1.ldaphost=<LDAP-HOST>
index.LDAP.CR.CONTACTS.rp.1.ldapport=<LDAP-PORT>
index.LDAP.CR.CONTACTS.rp.1.ldapuser=<LDAP-USER>
index.LDAP.CR.CONTACTS.rp.1.ldappassword=<LDAP-PW>
# The base dn used for LDAP-searches
index.LDAP.CR.CONTACTS.rp.1.ldapsearcbbasedn=dc=example,dc=com
# (Optional) The attribute which is used to identify entries in LDAP. This is returned with every search (defaults to "cn")
index.LDAP.CR.CONTACTS.rp.1.ldapidattribute=cn

# DO NOT USE CACHE FOR INDEXING
index.LDAP.CR.CONTACTS.rp.1.ds.cache=false
index.LDAP.CR.CONTACTS.rp.1.ds.cache.foreignlinkattributes=false
index.LDAP.CR.CONTACTS.rp.1.ds.cache.syncchecking=false

# The Rule (LDAP-query) that is used to fetch the objects
index.LDAP.CR.CONTACTS.rule=cn=*
# The fields/attributes that should be fetched for each entry
index.LDAP.CR.CONTACTS.indexedAttributes=mail,displayName,name,givenname,department,telephonenumber
# The fields/attributes that should also be stored in the index
index.LDAP.CR.CONTACTS.containedAttributes=mail,displayName,name,givenname,department,telephonenumber
# The fields/attributes that should be boosted with the value that is stated after the "^"
index.LDAP.CR.CONTACTS.BoostedAttributes=name^1.0,content^1.0
# The attribute/field that can be used as unique ID-Attribute
index.LDAP.CR.CONTACTS.idattribute=cn
# Enables the differential indexing and uses the attribute set in this option
index.LDAP.CR.CONTACTS.updateattribute=whenCreated
# Specific batch size for the configuration block (FILES) decrease this value if you have memory 
# problems. (overwrites index.LDAP.batchsize)
index.LDAP.CR.CONTACTS.batchsize=30
# Configure this index part to check every 6hours. note this should be a
# multiple of index.LDAP.interval
#index.DEFAUL.CR.FILES.interval=21600
# The following line would set the index job to execute an optimize command on the index after 
# each run (time an memory consuming)
index.LDAP.CR.CONTACTS.optimize=true
# The following line would set the index job to execute an optimize command on the index after 
# each run using a max segement rule => only optimizes when more than max segments are present 
# (not as time and memory consuming) (the line above should be commented out)
#index.LDAP.CR.CONTACTS.maxsegments=10
# Makes searches faster, required for VectorBolder, needs more space on disk (about double the 
# space as without Vector), default is true
index.LDAP.CR.CONTACTS.storeVectors=true

#-------------------------------------------------------------------------------------------------
# Define the content transformer map for transforming the contacts for indexing
#-------------------------------------------------------------------------------------------------
# Concatenate all the requested fields to a single field "content" (which is used in the search)
index.LDAP.CR.CONTACTS.transformer.99.rule=1==1
index.LDAP.CR.CONTACTS.transformer.99.transformerclass=com.gentics.cr.lucene.indexer.transformer.MergeTransformer
index.LDAP.CR.CONTACTS.transformer.99.sourceattributes=mail,displayName,name,givenname,department,telephonenumber
index.LDAP.CR.CONTACTS.transformer.99.targetattribute=content
